Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> a=['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> 
>>> 
>>> a.insert(0,'start')
>>> a
['start', 'hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> a.pop(0)
'start'
>>> a.index('hello')
0
>>> a.index('hello',1)
5
>>> a.index('hello',6)
8
>>> a.index('hello',3,9)
5
>>> 
>>> 
>>> 
>>> a
['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> a.append('hello')
>>> a
['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome', 'hello']
>>> 
>>> 
>>> 
>>> a.count('hello')
4
>>> 
>>> for i in range(a.count('hello')):
	a.append(a.pop(a.index('hello')))
	print(a)

	
[78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome', 'hello', 'hello']
[78, 90, 'abc', 765, 86786, 90, 'hello', 765, 'bye', 'welcome', 'hello', 'hello', 'hello']
[78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', 'hello', 'hello', 'hello', 'hello']
[78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', 'hello', 'hello', 'hello', 'hello']
>>> for i in range(a.count('hello')):
	a.insert(0,a.pop(a.index('hello')))
	print(a)

	
['hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', 'hello', 'hello', 'hello']
['hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', 'hello', 'hello', 'hello']
['hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', 'hello', 'hello', 'hello']
['hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', 'hello', 'hello', 'hello']
>>> k=0
>>> for i in range(a.count('hello')):
	k=a.index('hello',k)
	print(k)
	k+=1

	
0
10
11
12
>>> a=['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> k=0
>>> for i in range(a.count('hello')):
	k=a.index('hello',k)
	print(k)
	k+=1

	
0
5
8
>>> k=0
>>> for i in range(a.count('hello')):
	k=a.index('hello',k)
	a.insert(0,a.pop(k))
	k+=1

	
>>> a
['hello', 'hello', 'hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome']
>>> a=['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> for i in a:
	print(i,end=' ')

	
hello 78 90 abc 765 hello 86786 90 hello 765 bye welcome 
>>> for i in a:
	if i=='hello':
		print(i,end=' ')

		
hello hello hello 
>>> [i for i in a if i=='hello']
['hello', 'hello', 'hello']
>>> [i for i in a if i!='hello']
[78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome']
>>> [i for i in a if i=='hello']+[i for i in a if i!='hello']
['hello', 'hello', 'hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome']
>>> a.append([i for i in a if i=='hello']+[i for i in a if i!='hello'])
>>> a
['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome', ['hello', 'hello', 'hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome']]
>>> a.extend([i for i in a if i=='hello']+[i for i in a if i!='hello'])
>>> a
['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome', ['hello', 'hello', 'hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome'], 'hello', 'hello', 'hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome', ['hello', 'hello', 'hello', 78, 90, 'abc', 765, 86786, 90, 765, 'bye', 'welcome']]
>>> 
>>> 
>>> a=['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> type(a)
<class 'list'>
>>> type(a)==list
True
>>> type(a[0])
<class 'str'>
>>> type(a[0])==str
True
>>> [i for i in a if type(i)!=str]+[i for i in a if type(i)==str]
[78, 90, 765, 86786, 90, 765, 'hello', 'abc', 'hello', 'hello', 'bye', 'welcome']
>>> 
>>> 
>>> a
['hello', 78, 90, 'abc', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> 
>>> for i in range(len(a)):
	if type(a[i])==str:
		a.append(a.pop(i))

		
>>> a
[78, 90, 765, 86786, 90, 765, 'welcome', 'abc', 'hello', 'hello', 'bye', 'hello']
>>> a=['hello', 78, 90, 'abc','welcome','bye','cython', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> 
>>> for i in range(len(a)):
	if type(a[i])==str:
		a.append(a.pop(i))

		
>>> a
[78, 90, 'welcome', 'cython', 765, 86786, 90, 765, 'welcome', 'abc', 'hello', 'bye', 'bye', 'hello', 'hello']
>>> for i in range(5)
SyntaxError: invalid syntax
>>> for i in range(5):
	i=5678
	print(i)

	
5678
5678
5678
5678
5678
>>> for i in range(5):
	print(i,end= ' ')
	i=5678
	print(i)

	
0 5678
1 5678
2 5678
3 5678
4 5678
>>> k=0
>>> for i in range(len(a)):
	if type(a[k])==str:
		a.append(a.pop(i))
	else:
		k+=1

		
>>> a
[78, 90, 'cython', 86786, 765, 'abc', 'bye', 'hello', 'welcome', 90, 'hello', 'hello', 'welcome', 765, 'bye']
>>> k=0
>>> for i in range(len(a)):
	if type(a[k])==str:
		a.append(a.pop(k))
	else:
		k+=1

		
>>> a
[78, 90, 86786, 765, 90, 765, 'cython', 'abc', 'bye', 'hello', 'welcome', 'hello', 'hello', 'welcome', 'bye']
>>> a=['hello', 78, 90, 'abc','welcome','bye','cython', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> k=0
>>> for i in range(len(a)):
	if type(a[k])==str:
		a.append(a.pop(k))
	else:
		k+=1

		
>>> a
[78, 90, 765, 86786, 90, 765, 'hello', 'abc', 'welcome', 'bye', 'cython', 'hello', 'hello', 'bye', 'welcome']
>>> k
6
>>> a=['hello', 78, 90, 'abc','welcome','bye','cython', 765, 'hello', 86786, 90, 'hello', 765, 'bye', 'welcome']
>>> for i in range(len(a)):
	if type(a[i])==str:
		a.insert(0,a.pop(i))

		
>>> a
['welcome', 'bye', 'hello', 'hello', 'cython', 'bye', 'welcome', 'abc', 'hello', 78, 90, 765, 86786, 90, 765]
>>> a=[1,0,1,1,1,1,10,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0]
>>> 
>>> x=2
>>> y=2
>>> z=3
>>> n=6
>>> for i in range(x+1):
	for j in range(y+1):
		for k in range(z+1):
			print([i,j,k],end='  ')

			
[0, 0, 0]  [0, 0, 1]  [0, 0, 2]  [0, 0, 3]  [0, 1, 0]  [0, 1, 1]  [0, 1, 2]  [0, 1, 3]  [0, 2, 0]  [0, 2, 1]  [0, 2, 2]  [0, 2, 3]  [1, 0, 0]  [1, 0, 1]  [1, 0, 2]  [1, 0, 3]  [1, 1, 0]  [1, 1, 1]  [1, 1, 2]  [1, 1, 3]  [1, 2, 0]  [1, 2, 1]  [1, 2, 2]  [1, 2, 3]  [2, 0, 0]  [2, 0, 1]  [2, 0, 2]  [2, 0, 3]  [2, 1, 0]  [2, 1, 1]  [2, 1, 2]  [2, 1, 3]  [2, 2, 0]  [2, 2, 1]  [2, 2, 2]  [2, 2, 3]  
>>> for i in range(x+1):
	for j in range(y+1):
		for k in range(z+1):
			if i+j+k!=n:
				print([i,j,k],end='  ')

				
[0, 0, 0]  [0, 0, 1]  [0, 0, 2]  [0, 0, 3]  [0, 1, 0]  [0, 1, 1]  [0, 1, 2]  [0, 1, 3]  [0, 2, 0]  [0, 2, 1]  [0, 2, 2]  [0, 2, 3]  [1, 0, 0]  [1, 0, 1]  [1, 0, 2]  [1, 0, 3]  [1, 1, 0]  [1, 1, 1]  [1, 1, 2]  [1, 1, 3]  [1, 2, 0]  [1, 2, 1]  [1, 2, 2]  [2, 0, 0]  [2, 0, 1]  [2, 0, 2]  [2, 0, 3]  [2, 1, 0]  [2, 1, 1]  [2, 1, 2]  [2, 2, 0]  [2, 2, 1]  [2, 2, 3]  
>>> for i in range(x+1):
	for j in range(y+1):
		for k in range(z+1):
			if i+j+k<n:
				print([i,j,k],end='  ')

				
[0, 0, 0]  [0, 0, 1]  [0, 0, 2]  [0, 0, 3]  [0, 1, 0]  [0, 1, 1]  [0, 1, 2]  [0, 1, 3]  [0, 2, 0]  [0, 2, 1]  [0, 2, 2]  [0, 2, 3]  [1, 0, 0]  [1, 0, 1]  [1, 0, 2]  [1, 0, 3]  [1, 1, 0]  [1, 1, 1]  [1, 1, 2]  [1, 1, 3]  [1, 2, 0]  [1, 2, 1]  [1, 2, 2]  [2, 0, 0]  [2, 0, 1]  [2, 0, 2]  [2, 0, 3]  [2, 1, 0]  [2, 1, 1]  [2, 1, 2]  [2, 2, 0]  [2, 2, 1]  
>>> a=[]
>>> for i in range(x+1):
	for j in range(y+1):
		for k in range(z+1):
			if i+j+k<n:
				a.append([i,j,k])

				
>>> a
[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1]]
>>> 
>>> [[i,j,k] for i in range(x+1) for j in range(y+1) for k in range(z+1) if i+j+k<n]
[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1]]
>>> 
>>> 
>>> 
>>> a=[78, 90, 86786, 765, 90, 765,'hello']
>>> for i in range(len(a)):
	if type(a[i])!=int:
		print(False)

		
False
>>> a=[]
>>> for i in range(len(a)):
	if type(a[i])!=int:
		a.append(False)
	else:
		append(True)

		
>>> a
[]
>>> for i in range(len(a)):
	if type(a[i])!=int:
		a.append(False)
	else:
		a.append(True)

		
>>> a
[]
>>> a=[78, 90, 86786, 765, 90, 765,'hello']
>>> x=[]
>>> for i in range(len(a)):
	if type(a[i])!=int:
		x.append(False)
	else:
		x.append(True)

		
>>> x
[True, True, True, True, True, True, False]
>>> all(x)
False
>>> all(type(i)==int for i in a)
False
>>> any(x)
True
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number101
prime
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number123
composite
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number49
composite
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number101
prime
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number121
composite
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number101
prime
>>> i
100
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number101
prime
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number13
prime
>>> for i in range(1,5):
	print("hello")
else:
	print("for loop executed")

	
hello
hello
hello
hello
for loop executed
>>> for i in range(1,5):
	print("hello")
	break
else:
	print("for loop executed")

	
hello
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number102
composite
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number101
prime
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number123
composite
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number101
prime
>>> [7%i for i in range(2,(7//2)+1)]
[1, 1]
>>> [7%i!=0 for i in range(2,(7//2)+1)]
[True, True]
>>> all(7%i!=0 for i in range(2,(7//2)+1))
True
>>> all(101%i!=0 for i in range(2,(101//2)+1))
True
>>> all(123%i!=0 for i in range(2,(123//2)+1))
False
>>> 
=== RESTART: C:/Users/amit/AppData/Local/Programs/Python/Python37-32/a.py ===
enter a number27
composite
>>> import a.py
enter a number45
composite
Traceback (most recent call last):
  File "<pyshell#162>", line 1, in <module>
    import a.py
ModuleNotFoundError: No module named 'a.py'; 'a' is not a package
>>> import a
>>> 
>>> 
>>> 
>>> 
>>> 
=== RESTART: C:\Users\amit\AppData\Local\Programs\Python\Python37-32\a.py ===
enter a number500
>>> a
500
>>> p
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499]
>>> p=[]
>>> for a in range(2,int(input("enter a number"))+1):
    if all(a%i!=0 for i in range(2,(a//2)+1)):
        p.append(a)

        
enter a number300
>>> p
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293]
>>> [a for a in range(2,int(input("enter a number"))+1) if all(a%i!=0 for i in range(2,(a//2)+1))]
enter a number400
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397]
>>> 
