Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> 
============= RESTART: C:/Users/amit/Desktop/pyth/evening1/ex.py =============
enter the number of students
2
marks:23
name:a
marks:56
name:e
>>> d
{'a': 23, 'e': 56}
>>> 
============= RESTART: C:/Users/amit/Desktop/pyth/evening1/ex.py =============
enter the number of students
3
name:a
marks:34
name:b
marks:23
name:34
marks:34
[23, 34] 34
>>> 
============= RESTART: C:/Users/amit/Desktop/pyth/evening1/ex.py =============
enter the number of students
5
name:a
marks:45
name:b
marks:65
name:c
marks:47
name:d
marks:47
name:e
marks:86
[45, 47, 65, 86] 47
>>> 
============= RESTART: C:/Users/amit/Desktop/pyth/evening1/ex.py =============
enter the number of students
5
name:a
marks:34
name:b
marks:67
name:c
marks:57
name:d
marks:57
name:e
marks:89
['c', 'd']
>>> 
============= RESTART: C:/Users/amit/Desktop/pyth/evening1/ex.py =============
enter the number of students
5
name:a
marks:34
name:h
marks:36
name:e
marks:67
name:b
marks:36
name:z
marks:36
b
h
z
>>> 
>>> for i in range(5):
	print(int(input(':')))

	
:1
1
:2
2
:3
3
:4
4
:5
5
>>> [int(input(':')) for i in range(5)]
:1
:2
:3
:4
:5
[1, 2, 3, 4, 5]
>>> 
============ RESTART: C:/Users/amit/Desktop/pyth/evening1/ex2.py ============
enter the number of students
2
name:a
:2
:6
:54
:33
:7
name:b
:2
:4
:3
:5
:6
enter student namea
20.4
>>> d.get('a')
[2, 6, 54, 33, 7]
>>> d.get('ab')
>>> d.get('ab','no records found')
'no records found'
>>> d.get('a','no records found')
[2, 6, 54, 33, 7]
>>> 
>>> l=['a','b']
>>> l+[1,2,3]
['a', 'b', 1, 2, 3]
>>> l*3
['a', 'b', 'a', 'b', 'a', 'b']
>>> l=(1,2)
>>> l+(3,4,5,6)
(1, 2, 3, 4, 5, 6)
>>> l*3
(1, 2, 1, 2, 1, 2)
>>> 
>>> 
>>> a={1,2,3,4,5,6,7,8,9,10}
>>> b={5,3,89,21,4,3,2,1,7,8}
>>> 
>>> a+b
Traceback (most recent call last):
  File "<pyshell#22>", line 1, in <module>
    a+b
TypeError: unsupported operand type(s) for +: 'set' and 'set'
>>> a*3
Traceback (most recent call last):
  File "<pyshell#23>", line 1, in <module>
    a*3
TypeError: unsupported operand type(s) for *: 'set' and 'int'
>>> 
>>> 
>>> a-b
{9, 10, 6}
>>> a|b
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21, 89}
>>> a&b
{1, 2, 3, 4, 5, 7, 8}
>>> a^b
{6, 9, 10, 21, 89}
>>> 
>>> 
>>> a={1,2,3,5,[3,4,5]}
Traceback (most recent call last):
  File "<pyshell#32>", line 1, in <module>
    a={1,2,3,5,[3,4,5]}
TypeError: unhashable type: 'list'
>>> a={1,2,3,5,(3,4,5)}
>>> a={1,2,3,5,{2,3,4}}
Traceback (most recent call last):
  File "<pyshell#34>", line 1, in <module>
    a={1,2,3,5,{2,3,4}}
TypeError: unhashable type: 'set'
>>> 
>>> 
>>> 
>>> 
>>> chr(65)
'A'
>>> ord('a')
97
>>> 
>>> 
>>> #string
>>> "hello"
'hello'
>>> 'hello'
'hello'
>>> 
>>> "hello's"
"hello's"
>>> 'hello"s'
'hello"s'
>>> '\u00B2'
'²'
>>> '\u00B3'
'³'
>>> '\u00BC'
'¼'
>>> 
>>> '\u00Ba'
'º'
>>> '\u00Bd'
'½'
>>> 
>>> 
>>> 'h
SyntaxError: EOL while scanning string literal
>>> 
>>> '''a
b
c
d
e
f
g'''
'a\nb\nc\nd\ne\nf\ng'
>>> """this
is a
multiline
string"""
'this\nis a\nmultiline\nstring'
>>> print('this\nis a\nmultiline\nstring')
this
is a
multiline
string
>>> print('''
a
b
c
d
e''')

a
b
c
d
e
>>> 
>>> 
>>> a='abcdefghij'
>>> a[0]
'a'
>>> a[-3]
'h'
>>> a[-9]
'b'
>>> 
>>> a[8]
'i'
>>> 
>>> 
>>> a[:]
'abcdefghij'
>>> 
>>> a[::2]
'acegi'
>>> 
>>> a[-200:-100]
''
>>> a[0:-1]
'abcdefghi'
>>> 
>>> a[-9:9]
'bcdefghi'
>>> 
>>> a[2:-2]
'cdefgh'
>>> 
>>> a[-5:5]
''
>>> 
>>> a[::-1]
'jihgfedcba'
>>> 
>>> a[-3:3:-1]
'hgfe'
>>> a[-1:0:-1]
'jihgfedcb'
>>> 
>>> a[-4::-4]
'gc'
>>> 
>>> 
>>> a[900:-900:-1]
'jihgfedcba'
>>> 
>>> 
>>> a[0]
'a'
>>> a[0]='z'
Traceback (most recent call last):
  File "<pyshell#112>", line 1, in <module>
    a[0]='z'
TypeError: 'str' object does not support item assignment
>>> del(a[0])
Traceback (most recent call last):
  File "<pyshell#113>", line 1, in <module>
    del(a[0])
TypeError: 'str' object doesn't support item deletion
>>> 
>>> 
>>> len(a)
10
>>> a.__len__()
10
>>> max(a)
'j'
>>> min(a)
'a'
>>> a
'abcdefghij'
>>> sum
<built-in function sum>
>>> sum(a,'')
Traceback (most recent call last):
  File "<pyshell#122>", line 1, in <module>
    sum(a,'')
TypeError: sum() can't sum strings [use ''.join(seq) instead]
>>> 
>>> 
>>> sorted(a)
['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
>>> 
>>> 
>>> a.capitalize()
'Abcdefghij'
>>> a.endswith('j')
True
>>> a.endswith('j',5)
True
>>> a.endswith('j',5,7)
False
>>> a='abcadefgahjiak'
>>> a.find('a')
0
>>> a.index('a')
0
>>> a.find('a',1)
3
>>> a.index('a',1)
3
>>> a.find('a',5)
8
>>> a.index('a',5)
8
>>> a.find('a',9)
12
>>> a.index('a',9)
12
>>> a.find('a',13)
-1
>>> a.index('a',13)
Traceback (most recent call last):
  File "<pyshell#142>", line 1, in <module>
    a.index('a',13)
ValueError: substring not found
>>> 
>>> 
>>> 
>>> print("{}x{}={}".format(1,2,1*2))
1x2=2
>>> 
>>> 
>>> print("{} {} {}".format('hello',2,45))
hello 2 45
>>> 
>>> 
>>> print("{} {} {}".format('hello',2,45,'welcome','to python'))
hello 2 45
>>> print("{0} {1} {2}".format('hello',2,45,'welcome','to python'))
hello 2 45
>>> print("{0} {3} {4}".format('hello',2,45,'welcome','to python'))
hello welcome to python
>>> 
>>> 
>>> print("{0} {3} {0}".format('hello',2,45,'welcome','to python'))
hello welcome hello
>>> print("{3} {3} {3}".format('hello',2,45,'welcome','to python'))
welcome welcome welcome
>>> 
>>> x=['hello','welcome','to','python']
>>> 
>>> print("{3} {3} {3}".format(*x))
python python python
>>> x=('hello','welcome','to','python')
>>> print("{3} {3} {3}".format(*x))
python python python
>>> 
>>> 
>>> x={'hello','welcome','to','python'}
>>> print("{3} {3} {3}".format(*x))
hello hello hello
>>> print("{3} {3} {3}".format(*'hello'))
l l l
>>> 
>>> 
>>> print("{name} {val} {x}".format(x=90,name='hello',val=875764))
hello 875764 90
>>> 
>>> 
>>> d=(x=90,name='hello',val=875764)
SyntaxError: invalid syntax
>>> d=dict(x=90,name='hello',val=875764)
>>> d
{'x': 90, 'name': 'hello', 'val': 875764}
>>> print("{name} {val} {x}".format(**d))
hello 875764 90
>>> 
>>> print("{name} {val} {x}".format_map(d))
hello 875764 90
>>> 
>>> 
>>> a.index
